// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace ProjektNYYYZealand.Models
{
    public partial class ZealandProjektContext : DbContext
    {
        public ZealandProjektContext()
        {
        }

        public ZealandProjektContext(DbContextOptions<ZealandProjektContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Bog> Bøger { get; set; }
        public virtual DbSet<BogHold> BogHolds { get; set; }
        public virtual DbSet<Hold> Holds { get; set; }
        public virtual DbSet<Underviser> Undervisers { get; set; }
        public virtual DbSet<UndervisereHold> UndervisereHolds { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. See http://go.microsoft.com/fwlink/?LinkId=723263 for guidance on storing connection strings.
                optionsBuilder.UseSqlServer("Data Source=(localdb)\\MSSQLLocalDB;Initial Catalog=ZealandProjekt;Integrated Security=True;Connect Timeout=30;Encrypt=False;TrustServerCertificate=False;ApplicationIntent=ReadWrite;MultiSubnetFailover=False");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Bog>(entity =>
            {
                //entity.Property(e => e.Billede).IsFixedLength();

                entity.Property(e => e.BogId).ValueGeneratedNever();

                entity.Property(e => e.Forfatter).IsUnicode(false);

                entity.Property(e => e.Title).IsUnicode(false);

            });

            modelBuilder.Entity<BogHold>(entity =>
            {
                entity.Property(e => e.BogHoldId).ValueGeneratedNever();

                entity.HasOne(d => d.Bog)
                    .WithMany(p => p.BogHolds)
                    .HasForeignKey(d => d.BogId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__BogHold__Bog_Id__3A81B327");

                entity.HasOne(d => d.Hold)
                    .WithMany(p => p.BogHolds)
                    .HasForeignKey(d => d.HoldId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__BogHold__Hold_Id__3B75D760");
            });

            modelBuilder.Entity<Hold>(entity =>
            {
                entity.Property(e => e.HoldId).ValueGeneratedNever();

                entity.Property(e => e.Holdnavn).IsUnicode(false);

                entity.Property(e => e.Semester).IsUnicode(false);

                entity.Property(e => e.Uddannelse).IsUnicode(false);
            });

            modelBuilder.Entity<Underviser>(entity =>
            {
                entity.Property(e => e.Email).IsUnicode(false);

                entity.Property(e => e.Name).IsUnicode(false);
            });

            modelBuilder.Entity<UndervisereHold>(entity =>
            {
                entity.Property(e => e.UndervisereHoldId).ValueGeneratedNever();

                entity.HasOne(d => d.Hold)
                    .WithMany(p => p.UndervisereHolds)
                    .HasForeignKey(d => d.HoldId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Undervise__Hold___46E78A0C");

                entity.HasOne(d => d.Underviser)
                    .WithMany(p => p.UndervisereHolds)
                    .HasForeignKey(d => d.UnderviserId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Undervise__Under__47DBAE45");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}